# Smoothieboard configuration file example
#
# NOTE YOU MUST READ http://smoothieware.org/configuring-smoothie BEFORE EDITING THIS FILE or you *will* make mistakes
#
# Also please read the documentation at http://smoothieware.org/ in particular the guide specific to your machine type

# Lines that begin with a # character ( like this one ) are "comments" and will be ignored by Smoothie ( or their default value will be used )
# Some of the configuration options are "commented" and you need to remove the # character before them or they will be ignored
# Many more specialized configuration options are not present in this example file and can be found in the documentation wiki

# Arm solution configuration : Cartesian robot. Translates mm positions into stepper positions
#arm_solution                                cartesian        # For linear delta printers and other arm solutions, use the specific config example file

# Read http://smoothieware.org/stepper-motors#steps-per-mm before editing
alpha_steps_per_mm                           80               # Steps per mm for alpha ( X on cartesian ) stepper
beta_steps_per_mm                            80               # Steps per mm for beta ( Y on cartesian ) stepper
gamma_steps_per_mm                           1600             # Steps per mm for gamma ( Z on cartesian ) stepper

# Planner module configuration : Look-ahead and acceleration configuration
# Read http://smoothieware.org/motion-control before editing
acceleration                                 3000             # Acceleration in mm/second/second.
#z_acceleration                              500              # Acceleration for Z only moves in mm/s^2, 0 uses acceleration which is the default. DO NOT SET ON A DELTA
junction_deviation                           0.05             # How much to decelerate proportional to change of direction. Similar to the old "max_jerk", in millimeters
x_axis_max_speed                             30000            # Maximum speed for the X axis ( mm/min )
y_axis_max_speed                             30000            # Maximum speed for the Y axis ( mm/min )
z_axis_max_speed                             300              # Maximum speed for the Z axis ( mm/min )

# Stepper module pins ( read http://smoothieware.org/pin-configuration to learn about pins )
# Read http://smoothieware.org/stepper-motors before editing
# Alpha ( or X ) axis, by default uses the M1 stepper motor driver
alpha_step_pin                               2.0              # Pin for alpha stepper step signal
alpha_dir_pin                                0.5              # Pin for alpha stepper direction, add a ! after pin name ( 0.5! ) to invert direction
alpha_en_pin                                 0.4              # Pin for alpha enable pin
alpha_current                                1                # X stepper motor current

# Beta ( or Y ) axis, by default uses the M2 stepper motor driver
beta_step_pin                                2.1              # Pin for beta stepper step signal
beta_dir_pin                                 0.11             # Pin for beta stepper direction, add a ! after pin name ( 0.11! ) to invert direction
beta_en_pin                                  0.10             # Pin for beta enable
beta_current                                 1                # Y stepper motor current

# Gamma ( or Z ) axis, by default uses the M3 stepper motor driver
gamma_step_pin                               2.2              # Pin for gamma stepper step signal
gamma_dir_pin                                0.20             # Pin for gamma stepper direction, add a ! after pin name ( 0.20! ) to invert direction
gamma_en_pin                                 0.19             # Pin for gamma enable
gamma_current                                1                # Z stepper motor current

## Extruder configuration
# Read http://smoothieware.org/extruder and http://smoothieware.org/3d-printer-guide before editing

# First extruder module configuration. By default uses the M4 stepper motor driver
extruder.hotend.enable                       true             # Whether to activate the extruder module at all. All configuration is ignored if false
extruder.hotend.steps_per_mm                 140              # Steps per mm for extruder stepper
extruder.hotend.default_feed_rate            600              # Default rate ( mm/minute ) for moves where only the extruder moves
extruder.hotend.acceleration                 500              # Acceleration for the stepper motor in mm/s/s
extruder.hotend.max_speed                    50               # Maximum speed in mm/s
extruder.hotend.step_pin                     2.3              # Pin for extruder step signal
extruder.hotend.dir_pin                      0.22             # Pin for extruder dir signal, add a ! to the pin number ( 0.22! )to invert direction of rotation
extruder.hotend.en_pin                       0.21             # Pin for extruder enable signal
delta_current                                1                # First extruder stepper motor current

# Second extruder module configuration. By default uses the M5 stepper motor driver
# Read http://smoothieware.org/3d-printer-guide#multiple-extruders before editing
#extruder.hotend2.enable                     true             # Whether to activate the extruder module at all. All configuration is ignored if false
#extruder.hotend2.steps_per_mm               140              # Steps per mm for extruder stepper
#extruder.hotend2.default_feed_rate          600              # Default rate ( mm/minute ) for moves where only the extruder moves
#extruder.hotend2.acceleration               500              # Acceleration for the stepper motor in mm/s/s
#extruder.hotend2.max_speed                  50               # Maximum speed in mm/s
#extruder.hotend2.step_pin                   2.8              # Pin for extruder step signal
#extruder.hotend2.dir_pin                    2.13             # Pin for extruder dir signal, add a ! to the pin number ( 2.13! ) to invert direction of rotation
#extruder.hotend2.en_pin                     4.29             # Pin for extruder enable signal
#extruder.hotend2.x_offset                   0                # X offset from origin in mm
#extruder.hotend2.y_offset                   25.0             # Y offset from origin in mm
#extruder.hotend2.z_offset                   0                # Z offset from origin in mm
#epsilon_current                             1                # Second extruder stepper motor current

## Laser module configuration
# Read http://smoothieware.org/laser and http://smoothieware.org/laser-cutter-guide before editing
# READ DOCUMENTATION COMPLETELY AND BE CAREFUL. FIRE AND BLINDNESS HAZARD
#laser_module_enable                         false            # Whether to activate the laser module at all. All configuration is ignored if false.
#laser_module_pin                            2.5              # This pin will be PWMed to control the laser. Only pins [2.0-2.5 1.18 1.20 1.21 1.23 1.24 1.26 3.25 3.26] can be used
#laser_module_pwm_period                     20               # PWM frequency as the period in microseconds
#laser_module_maximum_power                  1.0              # Maximum duty cycle that will be applied to the laser
#laser_module_minimum_power                  0.0              # This is a value just below the minimum duty cycle that keeps the laser active.
#laser_module_default_power                  0.8              # This is the default laser power that will be used for cuts if a power has not been specified.  The value is a scale between

## Temperature control configuration
# Read http://smoothieware.org/temperaturecontrol before editing
# READ DOCUMENTATION COMPLETELY, ACTIVATE SAFETY FEATURES, AND BE CAREFUL. FIRE HAZARD
# First hotend configuration
temperature_control.hotend.enable            true             # Whether to activate this ( "hotend" ) module at all, all configuration is ignored if false.
temperature_control.hotend.thermistor_pin    0.23             # Pin for the thermistor to read, default to T1 ( 0.23 )
temperature_control.hotend.heater_pin        2.4              # Pin that controls the heater, can be set to "nc" if you only want to read temperatures. Here set to control the first small mosfet
temperature_control.hotend.thermistor        EPCOS100K        # Thermistor type, see http://smoothieware.org/temperaturecontrol#toc5 for possible values
temperature_control.hotend.set_m_code        104              # M-code to set temperature, reprap defaut for hotends is M104
temperature_control.hotend.set_and_wait_m_code 109            # M-code to set temperature and wait, reprap default for hotends is M109
temperature_control.hotend.designator        T                # Hotend designator, reprap default for first hotend is "T"
#temperature_control.hotend.max_temp         300              # Set maximum temperature - Will prevent heating above 300 by default ( degrees C )
#temperature_control.hotend.min_temp         0                # Set minimum temperature - Will prevent heating below if set ( degrees C )
#temperature_control.hotend.p_factor         13.7             # P factor for PID temperature regulation
#temperature_control.hotend.i_factor         0.097            # I factor for PID temperature regulation
#temperature_control.hotend.d_factor         24               # D factor for PID temperature regulation
#temperature_control.hotend.max_pwm          64               # Max PWM, 64 is a good value if driving a 12v resistor with 24v.
#temperature_control.hotend.runaway_heating_timeout  120      # Runaway detection, stop if takes more than this long to heat ( seconds )
#temperature_control.hotend.runaway_range    20               # Runaway detection, stop if temperature gets out of this range ( degrees C )

# Second hotend configuration
#temperature_control.hotend2.enable          true             # Whether to activate this ( "hotend2" ) module at all, all configuration is ignored if false.
#temperature_control.hotend2.thermistor_pin  0.25             # Pin for the thermistor to read, default to T3 ( 0.25 )
#temperature_control.hotend2.heater_pin      1.23             # Pin that controls the heater, usually set to a pin that controls a mosfet. Here set to control the third large mosfet.
#temperature_control.hotend2.thermistor      EPCOS100K        # Thermistor type, see http://smoothieware.org/temperaturecontrol#toc5 for possible values
#temperature_control.hotend2.set_m_code      104              # M-code to set temperature, reprap defaut for hotends is M104
#temperature_control.hotend2.set_and_wait_m_code 109          # M-code to set temperature and wait, reprap default for hotends is M109
#temperature_control.hotend2.designator      T1               # Hotend designator, reprap default for second hotend is "T1"
#temperature_control.hotend2.max_temp        300              # Set maximum temperature - Will prevent heating above 300 by default ( degrees C )
#temperature_control.hotend2.min_temp        0                # Set minimum temperature - Will prevent heating below if set ( degrees C )
#temperature_control.hotend2.p_factor        13.7             # P factor for PID temperature regulation
#temperature_control.hotend2.i_factor        0.097            # I factor for PID temperature regulation
#temperature_control.hotend2.d_factor        24               # D factor for PID temperature regulation
#temperature_control.hotend2.max_pwm         64               # Max PWM, 64 is a good value if driving a 12v resistor with 24v.
#temperature_control.hotend2.runaway_heating_timeout  120     # Runaway detection, stop if takes more than this long to heat ( seconds )
#temperature_control.hotend2.runaway_range   20               # Runaway detection, stop if temperature gets out of this range ( degrees C )

# Bed heater configuration
temperature_control.bed.enable               true             # Whether to activate this ( "bed" ) module at all, all configuration is ignored if false
temperature_control.bed.thermistor_pin       0.24             # Pin for the thermistor to read, default to T2 ( 0.24 )
temperature_control.bed.heater_pin           2.7              # Pin that controls the heater, usually set to a pin that controls a mosfet. Here set to control first large mosfet
temperature_control.bed.thermistor           Honeywell100K    # see http://smoothieware.org/temperaturecontrol#toc5
temperature_control.bed.set_m_code           140              # M-code to set temperature, reprap default for bed is M140
temperature_control.bed.set_and_wait_m_code  190              # M-code to set temperature and wait, reprap default for bed is M190
temperature_control.bed.designator           B                # Bed designator, reprap default is "B"
#temperature_control.bed.bang_bang           false            # Set to true to use bang bang control rather than PID, useful if using a solid state relay
#temperature_control.bed.hysteresis          2.0              # Set to the temperature in degrees C to use as hysteresis

## Switch modules
# Read http://smoothieware.org/switch before editing
switch.fan.enable                            true             # Whether to activate this ( "fan" ) module at all, all configuration is ignored if false
switch.fan.input_on_command                  M106             # Command that turns the fan on, reprap default is M106
switch.fan.input_off_command                 M107             # Command that turns the far off, reprap default is M107
switch.fan.output_pin                        2.6              # Pin that controls the fan, usually set to a pin that controls a mosfet. Here set to control the second small mosfet
switch.fan.output_type                       pwm              # PWM output settable with S parameter in the input_on_comand ( for example M106 S127 for half power )
#switch.fan.max_pwm                          255              # Max PWM value for the pin default is 255

## Endstops
# Read http://smoothieware.org/endstops before editing
endstops_enable                              true             # The endstop module is enabled by default and can be disabled here
#corexy_homing                               false            # Set to true if homing on a hbot or corexy
alpha_min_endstop                            1.24^            # Min endstop pin for the alpha ( X on cartesian ) axis. Defaults to XMIN. Add a ! to invert if endstop is NO connected to ground
#alpha_max_endstop                           1.25^            # Max endstop pin for the alpha ( X on cartesian ) axis. Defaults to XMAX. NOTE set to nc if this is not installed
#alpha_homing_direction                      home_to_min      # Homes to the "min" endstop by default. Set to home_to_max and set alpha_max value to home to the "max" endstop.
#alpha_min                                   0                # This gets loaded as the current position after homing when home_to_min is set
#alpha_max                                   200              # This gets loaded as the current position after homing when home_to_max is set
alpha_max_travel                             500              # Max travel in mm for alpha/X axis when homing, you must set this to a value higher than your axis travel

beta_min_endstop                             1.26^            # Min endstop pin for the beta ( Y on cartesian ) axis. Defaults to YMIN. Add a ! to invert if endstop is NO connected to ground
#beta_max_endstop                            1.27^            # Max endstop pin for the beta ( Y on cartesian ) axis. Defaults to YMAX. NOTE set to nc if this is not installed
#beta_homing_direction                       home_to_min      # Homes to the "min" endstop by default. Set to home_to_max and set beta_max value to home to the "max" endstop.
#beta_min                                    0                # This gets loaded as the current position after homing when home_to_min is set
#beta_max                                    200              # This gets loaded as the current position after homing when home_to_max is set
beta_max_travel                              500              # Max travel in mm for beta/Y axis when homing, you must set this to a value higher than your axis travel

gamma_min_endstop                            1.28^            # Min endstop pin for the gamma ( Z on cartesian ) axis. Defaults to ZMIN. Add a ! to invert if endstop is NO connected to ground
#gamma_max_endstop                           1.29^            # Max endstop pin for the gamma ( Z on cartesian ) axis. Defaults to ZMAX. NOTE set to nc if this is not installed
#gamma_homing_direction                      home_to_min      # Homes to the "min" endstop by default. Set to home_to_max and set gamma_max value to home to the "max" endstop.
#gamma_min                                   0                # This gets loaded as the current position after homing when home_to_min is set
#gamma_max                                   200              # This gets loaded as the current position after homing when home_to_max is set
gamma_max_travel                             500              # Max travel in mm for gamma/Z axis when homing, you must set this to a value higher than your axis travel

# Optional order in which axis will home, default is they all home at the same time,
# If this is set it will force each axis to home one at a time in the specified order
#homing_order                                XYZ              # X axis followed by Y then Z last
#move_to_origin_after_home                   false            # Move XY to 0,0 after homing

# Optional enable limit switches, actions will stop if any enabled limit switch is triggered
#alpha_limit_enable                          false            # Set to true to enable X min and max limit switches
#beta_limit_enable                           false            # Set to true to enable Y min and max limit switches
#gamma_limit_enable                          false            # Set to true to enable Z min and max limit switches

alpha_fast_homing_rate_mm_s                  50               # Speed to initially seek the endstop when homing, for the alpha ( X ) axis, in mm/s
beta_fast_homing_rate_mm_s                   50               # Speed to initially seek the endstop when homing, for the beta  ( Y ) axis, in mm/s
gamma_fast_homing_rate_mm_s                  4                # Speed to initially seek the endstop when homing, for the gamma ( Z ) axis, in mm/s
alpha_slow_homing_rate_mm_s                  25               # Speed to seek the endstop a second time for accuracy, for the alpha ( X axis ), in mm/s
beta_slow_homing_rate_mm_s                   25               # Speed to seek the endstop a second time for accuracy, for the beta ( Y axis ), in mm/s
gamma_slow_homing_rate_mm_s                  2                # Speed to seek the endstop a second time for accuracy, for the gamma ( Z axis ), in mm/s
alpha_homing_retract_mm                      5                # Distance to retract from the endstop once homing is done, for alpha ( X ) axis, in millimeters
beta_homing_retract_mm                       5                # Distance to retract from the endstop once homing is done, for beta ( Y ) axis, in millimeters
gamma_homing_retract_mm                      1                # Distance to retract from the endstop once homing is done, for gamma ( Z ) axis, in millimeters

#endstop_debounce_count                      100              # Uncomment if you get noise on your endstops, default is 100

## Z-probe
# Used for auto-calibration and levelling on 3D printers, and for surface probing on other machine types
# Read http://smoothieware.org/zprobe before editing
#zprobe.enable                               false            # Set to true to enable the z-probe module
#zprobe.probe_pin                            1.28!^           # Pin the probe is attached to, if "Normally Closed" remove the !, set to Z_MAX by default
#zprobe.slow_feedrate                        5                # Probe feed rate in mm/s
#zprobe.debounce_count                       100              # Uncomment if the probe input is noisy, this reduces accuracy but also interference
#zprobe.fast_feedrate                        100              # Feedrate when not actually probing in mm/sec
#zprobe.probe_height                         5                # How high above bed to start probing
#gamma_min_endstop                           nc               # Normally 1.28. Set to nc here to prevent conflict with the endstop module's configuration

## Panel
# Read http://smoothieware.org/panel before editing
# There, find the config example for your specific panel, and copy/paste it here
#panel.enable                                false            # Set to true to enable the panel code

## Custom menus : Example of a custom menu entry, which will show up in the Custom entry.
# NOTE _ gets converted to space in the menu and commands, | is used to separate multiple commands
#custom_menu.power_on.enable                 true             # Set to true to add this menu entry to the menu
#custom_menu.power_on.name                   Power_on         # Name of the menu entry to display in the menu
#custom_menu.power_on.command                M80              # Command to be executed when this menu entry is selected, here M80 turns the power supply ON
#custom_menu.power_off.enable                true             # Set to true to add this menu entry to the menu
#custom_menu.power_off.name                  Power_off        # Name of the menu entry to display in the menu
#custom_menu.power_off.command               M81              # Command to be executed when this menu is selected, here M81 turns the power supply OFF

## Network settings
# Read http://smoothieware.org/network before editing
network.enable                               false            # Set to true to enable the ethernet network services
network.ip_address                           auto             # Use dhcp ( automated IP adress attribution by your router ) to get ip address

# Comment the line above and uncomment the 3 lines below to manually setup ip address
#network.ip_address                          192.168.3.222    # The IP address
#network.ip_mask                             255.255.255.0    # The ip mask
#network.ip_gateway                          192.168.3.1      # The gateway address

## System configuration
# Serial communications configuration ( baud rate defaults to 9600 if undefined )
uart0.baud_rate                              115200           # Baud rate for the default hardware serial port
currentcontrol_module_enable                 true             # Only needed on a Smoothieboard, see http://smoothieware.org/currentcontrol


